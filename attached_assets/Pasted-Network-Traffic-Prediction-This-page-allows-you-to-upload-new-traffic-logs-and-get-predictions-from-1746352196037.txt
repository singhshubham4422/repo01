Network Traffic Prediction
This page allows you to upload new traffic logs and get predictions from the trained model. Upload a PCAP or CSV file to classify the traffic.

Upload a CSV file with network traffic data to run predictions.

Sample Analysis
Connection from 192.168.1.101 to 10.0.0.1 using TCP with 125 packets and 23500 bytes

Normal

Connection from 192.168.1.102 to 10.0.0.2 using UDP with 14 packets and 1800 bytes

Normal

Connection from 192.168.1.103 to 10.0.0.1 using TCP with 67 packets and 12400 bytes

Anomalous

Connection from 192.168.1.104 to 10.0.0.3 using HTTP with 203 packets and 156000 bytes

Normal

Connection from 192.168.1.105 to 10.0.0.2 using DNS with 8 packets and 640 bytes

Anomalous

Analysis Summary (Sample)
Normal Traffic

3
Anomalous Traffic

2
Single Packet Prediction
You can also enter details of a single network packet to get a prediction.

Source IP

192.168.1.1
Source Port

1234


Protocol

TCP
Destination IP

10.0.0.1
Destination Port

80


Packet Length

128


Additional Information (optional)


_pickle.UnpicklingError: Weights only load failed. This file can still be loaded, to do so you have two options, [1mdo those steps only if you trust the source of the checkpoint[0m. (1) In PyTorch 2.6, we changed the default value of the `weights_only` argument in `torch.load` from `False` to `True`. Re-running `torch.load` with `weights_only` set to `False` will likely succeed, but it can result in arbitrary code execution. Do it only if you got the file from a trusted source. (2) Alternatively, to load with `weights_only=True` please check the recommended steps in the following error message. WeightsUnpickler error: Unsupported global: GLOBAL numpy.ndarray was not an allowed global by default. Please use `torch.serialization.add_safe_globals([numpy.ndarray])` or the `torch.serialization.safe_globals([numpy.ndarray])` context manager to allowlist this global if you trust this class/function. Check the documentation of torch.load to learn more about types accepted by default with weights_only https://pytorch.org/docs/stable/generated/torch.load.html.
Traceback:
File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/streamlit/runtime/scriptrunner/exec_code.py", line 121, in exec_func_with_error_handling
    result = func()
             ^^^^^^
File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 639, in code_to_exec
    _mpa_v1(self._main_script_path)
File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 159, in _mpa_v1
    page.run()
File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/streamlit/navigation/page.py", line 297, in run
    exec(code, module.__dict__)
File "/home/runner/workspace/pages/prediction.py", line 86, in <module>
    model.load_state_dict(torch.load(model_path))
                          ^^^^^^^^^^^^^^^^^^^^^^
File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/torch/serialization.py", line 1524, in load
    raise pickle.UnpicklingError(_get_wo_message(str(e))) from None